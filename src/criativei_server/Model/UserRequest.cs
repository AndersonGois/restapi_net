/*
 * Criativei API
 *
 * API responsible for managing the distribution of images in their folders 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: agoisrj@gmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = criativei_server.Client.OpenAPIDateConverter;

namespace criativei_server.Model
{
    /// <summary>
    /// UserRequest
    /// </summary>
    [DataContract(Name = "UserRequest")]
    public partial class UserRequest : IValidatableObject
    {
        /// <summary>
        /// Defines Gender
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum GenderEnum
        {
            /// <summary>
            /// Enum Male for value: male
            /// </summary>
            [EnumMember(Value = "male")]
            Male = 1,

            /// <summary>
            /// Enum Female for value: female
            /// </summary>
            [EnumMember(Value = "female")]
            Female = 2,

            /// <summary>
            /// Enum Other for value: other
            /// </summary>
            [EnumMember(Value = "other")]
            Other = 3
        }


        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name = "gender", EmitDefaultValue = false)]
        public GenderEnum? Gender { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRequest" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="cpf">cpf.</param>
        /// <param name="email">email.</param>
        /// <param name="password">password.</param>
        /// <param name="gender">gender.</param>
        /// <param name="premium">premium.</param>
        /// <param name="terms">terms.</param>
        public UserRequest(string name = default(string), string cpf = default(string), string email = default(string), string password = default(string), GenderEnum? gender = default(GenderEnum?), bool premium = default(bool), bool terms = default(bool))
        {
            this.Name = name;
            this.Cpf = cpf;
            this.Email = email;
            this.Password = password;
            this.Gender = gender;
            this.Premium = premium;
            this.Terms = terms;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /// <example>Jo√£o</example>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Cpf
        /// </summary>
        /// <example>01234567890</example>
        [DataMember(Name = "cpf", EmitDefaultValue = false)]
        public string Cpf { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        /// <example>teste@teste.com</example>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        /// <example>12345</example>
        [DataMember(Name = "password", EmitDefaultValue = false)]
        public string Password { get; set; }

        /// <summary>
        /// Gets or Sets Premium
        /// </summary>
        [DataMember(Name = "premium", EmitDefaultValue = true)]
        public bool Premium { get; set; }

        /// <summary>
        /// Gets or Sets Terms
        /// </summary>
        [DataMember(Name = "terms", EmitDefaultValue = true)]
        public bool Terms { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Cpf: ").Append(Cpf).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  Premium: ").Append(Premium).Append("\n");
            sb.Append("  Terms: ").Append(Terms).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
